substitutions:
  device_name: eth-dongle-pro
  device_description: "P1 Dongle Pro with ethernet access"
  friendly_name: ETH Dongle Pro
  prj_version: "2025.1.1"

esphome:
  name: ${device_name}
  comment: "${device_description}" 
  platformio_options:
    upload_speed: 1500000
    board_build.flash_mode: dio
    
  project: 
    name: "smartstuff.eth_dongle_pro"
    version: ${prj_version}

esp32:
  board: esp32-c3-devkitm-1
          
ethernet:
  type: W5500
  cs_pin: 10
  clk_pin: 4
  mosi_pin: 6
  miso_pin: 5
  interrupt_pin: 1
     
ota:
  platform: esphome
  
web_server:
    
dashboard_import:
  package_import_url: github://mhendriks/esphome-p1/eth-dongle-pro.yaml@main

# Enable logging
logger:
  level: ERROR

# Enable Home Assistant API
api:
  
uart:
  rx_pin:
    number: 7
    inverted: true
  baud_rate: 115200
  rx_buffer_size: 1700

dsmr:
 id: dsmr_instance
 receive_timeout: 200ms
 max_telegram_length: 1700
#  gas_mbus_id: 2 //change mbus position of gas meter
 water_mbus_id: 2
#  crc_check: false #dsmr2

button:  
  - platform: restart
    name: "_Restart device"
    id: reboot
  - platform: factory_reset
    name: "_Restart with Factory Default Settings"

light:
  - platform: status_led
    name: "status led"
    output: status_output
    internal: true
  - platform: neopixelbus
    variant: WS2812
    pin: 8
    num_leds: 1
    name: "_Status LED"
    id: esp32c3_rgb_led
    entity_category: config
    restore_mode: ALWAYS_OFF
    internal: true

switch:
  - platform: template
    id: status_led_switch
    # name: "Status LED Switch"
    optimistic: true
    on_turn_on:
      - light.turn_on: 
          id: esp32c3_rgb_led
          red:   0%
          green: 0%
          blue: 100%
          brightness: 40%
          transition_length: 50ms
    on_turn_off:
      - light.turn_off: 
          id: esp32c3_rgb_led
          transition_length: 50ms

output:
  - platform: template
    id: status_output
    type: binary
    write_action:
      - if:
          condition:
             lambda: return state > 0;
          then:
            - if:
                condition:
                  switch.is_off: status_led_switch
                then:
                  switch.turn_on: status_led_switch
          else:
            - if:
                condition:
                  switch.is_on: status_led_switch
                then:
                  switch.turn_off: status_led_switch

sensor:
  - platform: dsmr
# #    energy_delivered_lux:
# #      name: "Energy Consumed Luxembourg"
# #      state_class: total_increasing
# #    energy_returned_lux:
# #      name: "Energy Produced Luxembourg"
# #      state_class: total_increasing
    energy_delivered_tariff1:
      name: "Energy Consumed Tariff 1"
      state_class: total_increasing
    energy_delivered_tariff2:
      name: "Energy Consumed Tariff 2"
      state_class: total_increasing
    energy_returned_tariff1:
      name: "Energy Produced Tariff 1"
      state_class: total_increasing
    energy_returned_tariff2:
      name: "Energy Produced Tariff 2"
      state_class: total_increasing
    power_delivered:
      name: "Power Consumed"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned:
      name: "Power Produced"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    electricity_failures:
      name: "Electricity Failures"
      icon: mdi:alert
    electricity_long_failures:
      name: "Long Electricity Failures"
      icon: mdi:alert
    voltage_l1:
      name: "Voltage Phase 1"
    voltage_l2:
      name: "Voltage Phase 2"
    voltage_l3:
      name: "Voltage Phase 3"
    current_l1:
      name: "Current Phase 1"
    current_l2:
      name: "Current Phase 2"
    current_l3:
      name: "Current Phase 3"
    power_delivered_l1:
      name: "Power Consumed Phase 1"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_delivered_l2:
      name: "Power Consumed Phase 2"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_delivered_l3:
      name: "Power Consumed Phase 3"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned_l1:
      name: "Power Produced Phase 1"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned_l2:
      name: "Power Produced Phase 2"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    power_returned_l3:
      name: "Power Produced Phase 3"
      unit_of_measurement: "W"
      state_class: "measurement"
      accuracy_decimals: 0
      filters:
        - multiply: 1000
    gas_delivered:
      name: "Gas Consumed"
      state_class: total_increasing
    water_delivered:
      name: Water delivered
      state_class: total_increasing
#for Belgium users
    gas_delivered_be:
      name: "Gas Consumed Belgium"
      state_class: total_increasing
    active_energy_import_current_average_demand:
      name: "Current Average Demand"
    active_energy_import_maximum_demand_running_month:
      name: "Maximum Month Demand"
    active_energy_import_maximum_demand_last_13_months:
      name: "13 Month Maximum Quarterly Demand"      
  - platform: uptime
    name: "_Uptime"
      
text_sensor:
  - platform: dsmr
#     identification:
#       name: "DSMR Identification"
    p1_version:
      name: "DSMR Version"
    p1_version_be:
      name: "DSMR Version Belgium"
    gas_equipment_id:
        name: "Gas meter ID"
#     equipment_id:
#         name: "Smart meter ID"
  - platform: version
    name: "_ESPHome Version"
    hide_timestamp: true
